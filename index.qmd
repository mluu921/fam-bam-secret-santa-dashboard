---
title: 'FAM BAM Secret Santa'
format:
  dashboard:
    scrolling: true
    theme: simplex
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(gt)
library(networkD3)
library(pins)
library(leaflet)
library(tidygeocoder)
library(igraph)

# source('src/query-gs-data.R')
# source('src/sims.R')

board <- pins::board_folder("board")

data <- pins::pin_read(board, "processed-data")

data <- data |> drop_na()

create_network_viz <- \(data, link_distance, charge) {
  plot_data <- data |>
    select(i, participants_giver, participants_receiver) |>
    pivot_longer(matches('participants'))

  g <- make_graph(edges = plot_data$value, directed = TRUE)

  p <- igraph_to_networkD3(g)

  p$links$value <- 5

  forceNetwork(
    Links = p$links,
    Nodes = p$nodes,
    Source = "source",
    Target = "target",
    NodeID = "name",
    Group = "name",
    Value = "value",
    opacity = .9,
    zoom = TRUE,
    fontSize = 15,
    opacityNoHover = .5,
    charge = charge,
    arrows = TRUE,
    linkDistance = link_distance
  )
}

```

## 
```{r}
#| expandable: true
#| title: Who has given and received gifts from who?

create_network_viz(data, link_distance = 200, charge = -100)

data |> 
  select(year, participants_giver, participants_receiver) |> 
  pivot_wider(names_from = participants_receiver, values_from = year,
              values_fn = \(x) paste0(x, collapse = ', ')) |> 
  group_by(group = 'Giver') |>  
  gt(row_group_as_column = TRUE) |> 
  sub_missing() |> 
  cols_label(participants_giver = '') |> 
  tab_spanner(label = 'Receiver', columns = 2:16) |> 
  tab_options(
    data_row.padding = px(0),
    table.font.size = px(10)
  )


```

## 

```{r}
#| expandable: true
#| title: Where are all the participants from?

plot_data <- data |> 
  select(participants_giver, location_giver, long_giver, lat_giver) |> 
  distinct()

leaflet(plot_data) |> 
  addTiles() |> 
  addMarkers(~long_giver, ~lat_giver, popup = ~participants_giver, clusterOptions = markerClusterOptions())

```

## 

```{r}
#| expandable: true
#| title: What are the odds of matching based on surname ?

out <- pins::pin_read(board, 'sims-tbl-prob-last-name')

out
```

## 

```{r}
#| expandable: true
#| title: What are the odds of matching based on gender ?

out <- pins::pin_read(board, 'sims-tbl-prob-gender')

out
```




## 

```{r}
#| expandable: true
#| title: Which year had the most participants?

local({
  plot_data <- data |>
    group_by(year) |>
    summarise(n = n())
  
  plot_data <- plot_data |>
    mutate(color = ifelse(n == max(plot_data$n), 'red', 'grey90'))
  
  p <- ggplot(plot_data, aes(x = year, y = n, fill = color)) +
    geom_col() +
    scale_fill_identity() +
    theme_minimal(base_size = 15) +
    theme(panel.grid = element_blank(), legend.position = 'none') +
    scale_y_continuous(breaks = seq(0, max(plot_data$n), by = 1)) +
    labs(x = 'Year', y = 'Number of Participants')
  
  plotly::ggplotly(p)
})

```



```{r}
#| results: asis
#| eval: false
out <- pmap_chr(params, ~ {

    knitr::knit_child(
      'child-dashboard-page.qmd',
      envir = environment(),
      quiet = TRUE
    )

})

cat(unlist(out), sep = '\n')

```


